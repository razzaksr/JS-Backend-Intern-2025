Back end development (API) using Node JS:

Required Tools:
download and install Node and VS Code
1. npmjs.org
	cmd >> 
		node --version
		npm --version

2. MongoDB Atlas:

	login into mongodb atlas


Java script based Full stack web development:
MERN	>> MongoDB Express React Node
MEAN	>> MongoDB Express Angular Node
MEVN	>> MongoDB Express Vue Node

MongoDB, Express JS, Node >> Rest Client(VS Code Extension)



Http	>> 8080

URL based calling 


Request: url
Header >> Authentication
Data transfer:
1. Parameters(get,delete)	>> url with data>> eg: http://amazon.in/search/product='rebok shoe'
2. Body(post/put)		>> hidden


Mappings:   
post,>> Create
put,>>  Update
delete,>> Delete
get>> Read




Response:
data
status>> 
200,		>> ok, data
400,		>> bad request
500,		>> internal error
401,		>> unauthorized
403,		>> forbidden
201,		>> success, no data
404		>> not found




run:
python filename.py
java filename
gcc filename.c

node filename.js


Basic Operations:
Data processing>> variables>> var, const, let
Number
String
Object>> array, list, json
Boolean

var hai = "Razak Mohamed S"
hai = false



Functions/Operations:

CRUD

temporary memory
array/list

push
pop
map
filter


node package manager>> npm


npm install 

to read console inputs in node js prompt-sync:
npm install prompot-sync


https://github.com/razzaksr/JS-Backend-Intern-2025



Bank Account:
Account Number
Account Balance
Account Status
Account Holder
IFSC Code

Student:
Reg No
Name
Dept
College
Year

Patient
patientId
name
issue
bmi

list of name
list of patientId
list of issue
list of bmi

Java Script Object Notation
patient:
{
"patientId":656789,
"patientName":"Victor",
"patientIssue":"ortho",
"patientBMI":24.5,
"patientType":"op/ip"
}

customer:
{
"id":765456789,
"name":"Razak Mohamed S",
"contact":{
"mobile":876545678,
"email":"razaksrmd@gmail.com",
"address":"Salem"
}
"experience":12
}



JSON:
parse	>> string to json
stringify	>> json to string


Bank account teller management: CRUD with JSON



Patient:

admitNewPatient
viewOut
viewIn
updateBMI
closePAtient


URL Based Calling
/icici/open		>> open
/icici/view			>> view customers
/icici/transaction	>> transactions
/icici/suspend		>> closeAccount

const openAccount = () =>{}



API Server/ Backend/ application server	 >> port, express js
mappings:
post>> open
get	> view
put> transaction
delete> suspend


Client: filename.http
Rest Client>> construct request and call the backend api via url



node package manager:

express
body-parser
nodemon		>> devtools
mongoose


project:
npm init

steps:
name
version
.
.

npm init -y


package.json:
name
dependencies
scripts/ execution:
package-lock.json

ps1 >> running scripts disabled error
set-ExecutionPolicy RemoteSigned -Scope CurrentUser





Web application: 
Front end		>> UI
Back end 	>> API
Data end		>> database

Java script >> 
Express JS>> express
auto restart>> nodemon

project:
	npm init
	npm init -y

run:
	node filename.js

backend:	
	controller/ routers
		mapping functions>> get, post, put, delete
	
	

Client					API/Backend Server
request						/kart/add
							/kart/view
							/kart/update




